name: CI

on:
  push:
    branches:
      - gatsby

jobs:
  test:
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: |
          npm ci
      
      - name: Lint
       run: |
         npm run lint
      
      -name: Test
       run: |
         npm run test:ci

  build and deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: |
          npm ci

      - name: Create env file
        run: |
          touch .env
          echo PRISMIC_TOKEN=${{ secrets.PRISMIC_TOKEN }} >> .env
          echo PRISMIC_SERVICE=${{ secrets.PRISMIC_SERVICE }} >> .env
          echo PRISMIC_CUSTOM_TYPES_API_TOKEN=${{ secrets.PRISMIC_CUSTOM_TYPES_API_TOKEN }} >> .env

      - name: Build
        run: |
          npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform -chdir="./tools/terraform" init

      - name: Terraform Format
        run: terraform -chdir="./tools/terraform" fmt -check

      - name: Terraform Plan
        run: terraform -chdir="./tools/terraform" plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform -chdir="./tools/terraform"  apply -auto-approve
